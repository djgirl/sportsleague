{"ast":null,"code":"import { DOMAIN_NAME } from './apiUrls';\nexport const fetch_get = (url, status = false, alert = false) => {\n  const ROOT_API = DOMAIN_NAME;\n  return fetch(ROOT_API + url, {\n    method: 'GET',\n    headers: {\n      'Authorization': 'Token ' + localStorage.getItem('token'),\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    if (response.status === 403) {\n      alert('You DO not access to this page');\n      return {};\n    }\n\n    if (response.status === 401) {\n      alert('You do not access to this page');\n      return {\n        'unauthorized': true\n      };\n    } else if (status) {\n      return response;\n    } else {\n      return response.json();\n    }\n  }).catch(error => {\n    console.log('Server busy, Please try again.');\n  });\n};\nexport const fetch_post = (url, data, status = false, alert = false) => {\n  const ROOT_API = DOMAIN_NAME;\n  return fetch(ROOT_API + url, {\n    method: 'POST',\n    headers: {\n      'Authorization': 'Token ' + localStorage.getItem('token')\n    },\n    body: data\n  }).then(response => {\n    if (response.status === 403) {\n      alert('You DO not access to this page');\n      return {};\n    }\n\n    if (status) {\n      return response;\n    } else {\n      return response.json();\n    }\n  }).catch(error => {\n    alert('Server busy, Please try again.');\n  });\n};\nexport const fetch_post_download = (url, data, status = false, alert = false) => {\n  const ROOT_API = DOMAIN_NAME;\n  return fetch(ROOT_API + url, {\n    method: 'POST',\n    headers: {\n      'Authorization': 'Token ' + localStorage.getItem('token')\n    },\n    body: data\n  }).then(response => {\n    console.log(response, \"*********res\");\n\n    if (response.status === 403) {\n      alert('You DO not access to this page');\n      return {};\n    }\n\n    if (status) {\n      return response;\n    } else {\n      return response.blob();\n    }\n  }).catch(error => {\n    alert('Server busy, Please try again.');\n  });\n};\nexport const fetch_post_field = (url, data, status = false, alert = false) => {\n  const ROOT_API = DOMAIN_NAME;\n  return fetch(ROOT_API + url, {\n    method: 'POST',\n    headers: {\n      'Authorization': 'Token ' + localStorage.getItem('token'),\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: data\n  }).then(response => {\n    if (response.status === 403) {\n      alert('You DO not access to this page');\n      return {};\n    }\n\n    if (status) {\n      return response;\n    } else {\n      return response.json();\n    }\n  }).catch(error => {\n    alert('Server busy, Please try again.');\n  });\n};\nexport const login_post = (url, data, status = false, alert = false) => {\n  const ROOT_API = DOMAIN_NAME;\n  return fetch(ROOT_API + url, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: data\n  }).then(response => {\n    if (response.status === 403) {\n      alert('You DO not access to this page');\n      return {};\n    }\n\n    if (status) {\n      return response;\n    } else {\n      return response.json();\n    }\n  }).catch(error => {\n    alert('Server busy, Please try again.');\n  });\n};","map":{"version":3,"sources":["/home/nikhila/Documents/projs/react/frontend/src/components/Fetch.js"],"names":["DOMAIN_NAME","fetch_get","url","status","alert","ROOT_API","fetch","method","headers","localStorage","getItem","then","response","json","catch","error","console","log","fetch_post","data","body","fetch_post_download","blob","fetch_post_field","login_post"],"mappings":"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","sourcesContent":["import { DOMAIN_NAME } from './apiUrls';\n\nexport const fetch_get = (url, status=false, alert=false) => {\n  const ROOT_API = DOMAIN_NAME;\n  return fetch(ROOT_API + url, {\n    method: 'GET',\n    headers: {\n      'Authorization': 'Token ' + localStorage.getItem('token'),\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    }\n  })\n  .then(response => {\n    if(response.status === 403) {\n      alert('You DO not access to this page')\n      return {}\n    }\n    if(response.status === 401) {\n      alert('You do not access to this page')\n      return {'unauthorized': true}\n    }\n    else if(status) {\n      return response\n    } else {\n      return response.json()\n    }\n  })\n  .catch((error) => {\n    console.log('Server busy, Please try again.')\n  });\n}\n\nexport const fetch_post = (url, data, status=false, alert=false) => {\n  const ROOT_API =DOMAIN_NAME;\n  return fetch(ROOT_API + url, {\n    method: 'POST',\n    headers: {\n      'Authorization': 'Token ' + localStorage.getItem('token'),\n    },\n    body: data\n  })\n  .then(response => {\n    if(response.status === 403) {\n      alert('You DO not access to this page')\n      return {}\n    }\n    if(status) {\n      return response\n    } else {\n      return response.json()\n    }\n  })\n  .catch((error) => {\n    alert('Server busy, Please try again.')\n  });\n}\n\nexport const fetch_post_download = (url, data, status=false, alert=false) => {\n  const ROOT_API =DOMAIN_NAME;\n  return fetch(ROOT_API + url, {\n    method: 'POST',\n    headers: {\n      'Authorization': 'Token ' + localStorage.getItem('token'),\n    },\n    body: data\n  })\n  .then(response => {\n    console.log(response, \"*********res\")\n    if(response.status === 403) {\n      alert('You DO not access to this page')\n      return {}\n    }\n    if(status) {\n      return response\n    } else {\n      return response.blob()\n    }\n  })\n  .catch((error) => {\n    alert('Server busy, Please try again.')\n  });\n}\n\nexport const fetch_post_field = (url, data, status=false, alert=false) => {\n  const ROOT_API =DOMAIN_NAME;\n  return fetch(ROOT_API + url, {\n    method: 'POST',\n    headers: {\n      'Authorization': 'Token ' + localStorage.getItem('token'),\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: data\n  })\n  .then(response => {\n    if(response.status === 403) {\n      alert('You DO not access to this page')\n      return {}\n    }\n    if(status) {\n      return response\n    } else {\n      return response.json()\n    }\n  })\n  .catch((error) => {\n    alert('Server busy, Please try again.')\n  });\n}\n\nexport const login_post = (url, data, status=false, alert=false) => {\n  const ROOT_API =DOMAIN_NAME;\n  return fetch(ROOT_API + url, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: data\n  })\n  .then(response => {\n    if(response.status === 403) {\n      alert('You DO not access to this page')\n      return {}\n    }\n    if(status) {\n      return response\n    } else {\n      return response.json()\n    }\n  })\n  .catch((error) => {\n    alert('Server busy, Please try again.')\n  });\n}\n"]},"metadata":{},"sourceType":"module"}